# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :ios

fullname=""

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
	
	# clear_derived_data    

    INFO_PLIST_FILE_PATH = "./testCi/Info.plist"

    appname = get_info_plist_value(path: "#{INFO_PLIST_FILE_PATH}", key: "CFBundleDisplayName")
    versionNumber = get_info_plist_value(path: "#{INFO_PLIST_FILE_PATH}", key: "CFBundleShortVersionString") # 获取version版本号
    buildNumber = get_info_plist_value(path: "#{INFO_PLIST_FILE_PATH}", key: "CFBundleVersion") # 获取build版本号
  
    puts "info:#{appname}, #{versionNumber}, #{buildNumber}"

    fullname = "#{appname}-#{versionNumber}-#{buildNumber}"


    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    # gym # Build your app - more options available
    # pilot

    # get_certificates           # invokes cert
    # get_provisioning_profile   # invokes sigh

    fullname = "#{fullname}-adhoc.ipa"

    gym(export_xcargs: "-allowProvisioningUpdates",
        output_name: "#{fullname}",
        export_options: {
          method: "ad-hoc", # 指定打包方式
          thinning: "<none>",
        }
        )

    firim(
          firim_api_token: "5187bf5d3016ebd975b455f08cb929bb",
          app_changelog: "test auto upload",

          )


    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "test appstore"
  lane :archive do
    
    fullname = "#{fullname}-release.ipa"

     gym(export_xcargs: "-allowProvisioningUpdates",
        output_name: "#{fullname}",
        export_options: {
          method: "app-store", # 指定打包方式
          thinning: "<none>",
        }
        )

  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
